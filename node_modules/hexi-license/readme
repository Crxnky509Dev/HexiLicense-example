HexiLicense API Client
A simple and easy-to-use Node.js client wrapper for the HexiLicense license management API. This package allows you to efficiently generate, validate, revoke, list, and retrieve information about licenses for your products.

Features
Generate Licenses – Create new licenses for your products.

Check Licenses – Verify the validity of any given license key.

Revoke Licenses – Revoke a license key at any time.

List Licenses – Retrieve a list of licenses, with optional filtering.

Get License Info – Fetch detailed information about a specific license.

Installation
You can easily install the HexiLicense API Client via npm:

npm install hexi-license


```const HexiLicense = require('hexi-license');```

// Initialize the client with your API key
```const hexi = new HexiLicense({ apiKey: 'your_api_key_here' });```


Example Usage
Here’s an example showcasing how to generate, check, revoke, list, and retrieve license information:

```const HexiLicense = require('hexi-license');```

```const hexi = new HexiLicense({ apiKey: 'your_api_key_here' });```

```const { Client, GatewayIntentBits } = require('discord.js');
const HexiLicense = require('hexi-license');

// Initialize the HexiLicense client with your API key
const hexi = new HexiLicense({
  apiKey: 'Your API Key',
  baseUrl: 'https://dashboard.hexilicense.xyz/api' // Optional: Custom API URL
});

// Initialize the Discord client with necessary intents
const client = new Client({ 
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent
  ]
});

// Your bot's prefix
const prefix = '!';

// When the bot is ready
client.once('ready', () => {
  console.log(`Logged in as ${client.user.tag}!`);
});

// Listen for messages to handle commands
client.on('messageCreate', async (message) => {
  if (message.author.bot) return;  // Ignore bot messages

  // Command handling (example: !generate, !check, !revoke)
  if (message.content.startsWith(prefix)) {
    const args = message.content.slice(prefix.length).trim().split(' ');
    const command = args.shift().toLowerCase();

    try {
      switch (command) {
        case 'generate':
          // Generate a new license (Example: !generate productId userId duration)
          const productId = args[0];
          const userId = args[1];
          const duration = parseInt(args[2], 10);

          const license = await hexi.generateLicense({
            productId,
            userId,
            duration
          });
          message.channel.send(`License generated: ${JSON.stringify(license)}`);
          break;

        case 'check':
          // Check a license (Example: !check licenseKey)
          const licenseKey = args[0];
          const check = await hexi.checkLicense(licenseKey);
          message.channel.send(`License check: ${JSON.stringify(check)}`);
          break;

        case 'revoke':
          // Revoke a license (Example: !revoke licenseKey)
          const revokeKey = args[0];
          await hexi.revokeLicense(revokeKey);
          message.channel.send('License revoked.');
          break;

        case 'list':
          // List licenses (Example: !list productId)
          const listProductId = args[0];
          const licenses = await hexi.listLicenses({ productId: listProductId });
          message.channel.send(`Licenses: ${JSON.stringify(licenses)}`);
          break;

        case 'info':
          // Get license info (Example: !info licenseKey)
          const licenseInfoKey = args[0];
          const licenseInfo = await hexi.getLicenseInfo(licenseInfoKey);
          message.channel.send(`License info: ${JSON.stringify(licenseInfo)}`);
          break;

        default:
          message.channel.send('Unknown command.');
      }
    } catch (error) {
      console.error(error);
      message.channel.send(`An error occurred: ${error.message}`);
    }
  }
});

client.login(token here)
```

License
This package is released under the MIT License.

© Crxnky509 or HexiLicense.xyz

Contributing
Feel free to submit issues and pull requests to improve this project.

